<div>
  <div>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="container-fluid">
        <div class="collapse navbar-collapse justify-content-end">
          <div class="d-flex">
            <%= button_to 'Sign out', destroy_user_session_path, method: :delete, data: { turbo_method: :delete }, class: 'btn btn-danger' %>
               <%= link_to "Add Post", new_user_post_path(current_user), class: "btn btn-success" %>
          </div>
        </div>
      </div>
   </nav>

  </div>

  <div class="container mt-4">
  <div class="row">
    <% @posts.each do |post| %>
      <div class="col-md-4">  
        <div class="card mb-4 shadow-sm">
          <div class="card-body">
            <h5 class="card-title"><%= post.postname %></h5>
            <div class="d-flex justify-content-between align-items-center">
              <div>
                <span class="badge bg-primary"><%= post.likes.count %> Likes</span>
              </div>
              <div>
                <%= button_to 'Like', create_like_path(post.id), method: :post, class: 'btn btn-outline-primary btn-sm' %>
              </div>
            </div>
            <div class="mt-3">
              <button type="button" class="btn btn-secondary" onclick="loadCommentForm(<%= post.id %>, 'comment-form-<%= post.id %>')">Add Comment</button>
              <div id="comment-form-<%= post.id %>" class="mt-2"></div>
            </div>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script>
  function loadCommentForm(postId, containerId) {
    const renderPage = document.getElementById(containerId);

    fetch(`/posts/${postId}/comments/new`, {
      method: 'GET',
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Failed to load comment form');
      }
      return response.text();
    })
    .then(html => {
      renderPage.innerHTML = html;
    })
    .catch(error => console.error('Error:', error));
  }
</script>

